package com.ckb.wo.server.dao.mda.ibatis.impl;

import com.ckb.wo.client.model.MdaManifestDetail;
import com.ckb.wo.client.model.MdaManifestDetailExample;
import com.ckb.wo.server.dao.mda.MdaManifestDetailDAO;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class MdaManifestDetailDAOImpl extends SqlMapClientDaoSupport implements MdaManifestDetailDAO {

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_manifest_detail
	 * @ibatorgenerated  Tue Jul 06 16:43:03 SGT 2010
	 */
	public MdaManifestDetailDAOImpl() {
		super();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_manifest_detail
	 * @ibatorgenerated  Tue Jul 06 16:43:03 SGT 2010
	 */
	public int countMdaManifestDetailByExample(MdaManifestDetailExample example) {
		Integer count = (Integer) getSqlMapClientTemplate().queryForObject(
				"t_manifest_detail.ibatorgenerated_countByExample", example);
		return count;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_manifest_detail
	 * @ibatorgenerated  Tue Jul 06 16:43:03 SGT 2010
	 */
	@SuppressWarnings("unchecked")
	public List<MdaManifestDetail> selectMdaManifestDetailByExample(
			MdaManifestDetailExample example) {
		List<MdaManifestDetail> list = getSqlMapClientTemplate().queryForList(
				"t_manifest_detail.ibatorgenerated_selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_manifest_detail
	 * @ibatorgenerated  Tue Jul 06 16:43:03 SGT 2010
	 */
	public MdaManifestDetail selectMdaManifestDetailByPrimaryKey(Long da,
			Long manifestNo) {
		MdaManifestDetail key = new MdaManifestDetail();
		key.setDa(da);
		key.setManifestNo(manifestNo);
		MdaManifestDetail record = (MdaManifestDetail) getSqlMapClientTemplate()
				.queryForObject(
						"t_manifest_detail.ibatorgenerated_selectByPrimaryKey",
						key);
		return record;
	}
}