package com.ckb.wo.server.dao.fast.ibatis.impl;

import com.ckb.wo.client.model.FastDepartment;
import com.ckb.wo.client.model.FastDepartmentExample;
import com.ckb.wo.server.dao.fast.FastDepartmentDAO;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class FastDepartmentDAOImpl extends SqlMapClientDaoSupport implements FastDepartmentDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_department
     *
     * @ibatorgenerated Thu Jul 01 20:09:00 SGT 2010
     */
    public FastDepartmentDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_department
     *
     * @ibatorgenerated Thu Jul 01 20:09:00 SGT 2010
     */
    public int countFastDepartmentByExample(FastDepartmentExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("t_department.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_department
     *
     * @ibatorgenerated Thu Jul 01 20:09:00 SGT 2010
     */
    public int deleteFastDepartmentByExample(FastDepartmentExample example) {
        int rows = getSqlMapClientTemplate().delete("t_department.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_department
     *
     * @ibatorgenerated Thu Jul 01 20:09:00 SGT 2010
     */
    public int deleteFastDepartmentByPrimaryKey(String departmentId) {
        FastDepartment key = new FastDepartment();
        key.setDepartmentId(departmentId);
        int rows = getSqlMapClientTemplate().delete("t_department.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_department
     *
     * @ibatorgenerated Thu Jul 01 20:09:00 SGT 2010
     */
    public void insertFastDepartment(FastDepartment record) {
        getSqlMapClientTemplate().insert("t_department.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_department
     *
     * @ibatorgenerated Thu Jul 01 20:09:00 SGT 2010
     */
    public void insertFastDepartmentSelective(FastDepartment record) {
        getSqlMapClientTemplate().insert("t_department.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_department
     *
     * @ibatorgenerated Thu Jul 01 20:09:00 SGT 2010
     */
    @SuppressWarnings("unchecked")
    public List<FastDepartment> selectFastDepartmentByExample(FastDepartmentExample example) {
        List<FastDepartment> list = getSqlMapClientTemplate().queryForList("t_department.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_department
     *
     * @ibatorgenerated Thu Jul 01 20:09:00 SGT 2010
     */
    public FastDepartment selectFastDepartmentByPrimaryKey(String departmentId) {
        FastDepartment key = new FastDepartment();
        key.setDepartmentId(departmentId);
        FastDepartment record = (FastDepartment) getSqlMapClientTemplate().queryForObject("t_department.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_department
     *
     * @ibatorgenerated Thu Jul 01 20:09:00 SGT 2010
     */
    public int updateFastDepartmentByExampleSelective(FastDepartment record, FastDepartmentExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("t_department.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_department
     *
     * @ibatorgenerated Thu Jul 01 20:09:00 SGT 2010
     */
    public int updateFastDepartmentByExample(FastDepartment record, FastDepartmentExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("t_department.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_department
     *
     * @ibatorgenerated Thu Jul 01 20:09:00 SGT 2010
     */
    public int updateFastDepartmentByPrimaryKeySelective(FastDepartment record) {
        int rows = getSqlMapClientTemplate().update("t_department.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_department
     *
     * @ibatorgenerated Thu Jul 01 20:09:00 SGT 2010
     */
    public int updateFastDepartmentByPrimaryKey(FastDepartment record) {
        int rows = getSqlMapClientTemplate().update("t_department.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table t_department
     *
     * @ibatorgenerated Thu Jul 01 20:09:00 SGT 2010
     */
    private static class UpdateByExampleParms extends FastDepartmentExample {
        private Object record;

        public UpdateByExampleParms(Object record, FastDepartmentExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}