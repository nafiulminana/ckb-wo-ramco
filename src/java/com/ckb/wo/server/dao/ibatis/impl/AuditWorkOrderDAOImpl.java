package com.ckb.wo.server.dao.ibatis.impl;

import com.ckb.wo.client.model.AuditWorkOrder;
import com.ckb.wo.client.model.AuditWorkOrderExample;
import com.ckb.wo.server.dao.AuditWorkOrderDAO;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class AuditWorkOrderDAOImpl extends SqlMapClientDaoSupport implements AuditWorkOrderDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:03 SGT 2010
     */
    public AuditWorkOrderDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:05 SGT 2010
     */
    public int countAuditWorkOrderByExample(AuditWorkOrderExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("tauditwo.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:05 SGT 2010
     */
    public int deleteAuditWorkOrderByExample(AuditWorkOrderExample example) {
        int rows = getSqlMapClientTemplate().delete("tauditwo.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:05 SGT 2010
     */
    public int deleteAuditWorkOrderByPrimaryKey(Long tauditwoPk) {
        AuditWorkOrder key = new AuditWorkOrder();
        key.setTauditwoPk(tauditwoPk);
        int rows = getSqlMapClientTemplate().delete("tauditwo.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:05 SGT 2010
     */
    public Long insertAuditWorkOrder(AuditWorkOrder record) {
        Object newKey = getSqlMapClientTemplate().insert("tauditwo.ibatorgenerated_insert", record);
        return (Long) newKey;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:05 SGT 2010
     */
    public Long insertAuditWorkOrderSelective(AuditWorkOrder record) {
        Object newKey = getSqlMapClientTemplate().insert("tauditwo.ibatorgenerated_insertSelective", record);
        return (Long) newKey;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:05 SGT 2010
     */
    @SuppressWarnings("unchecked")
    public List<AuditWorkOrder> selectAuditWorkOrderByExample(AuditWorkOrderExample example) {
        List<AuditWorkOrder> list = getSqlMapClientTemplate().queryForList("tauditwo.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:05 SGT 2010
     */
    public AuditWorkOrder selectAuditWorkOrderByPrimaryKey(Long tauditwoPk) {
        AuditWorkOrder key = new AuditWorkOrder();
        key.setTauditwoPk(tauditwoPk);
        AuditWorkOrder record = (AuditWorkOrder) getSqlMapClientTemplate().queryForObject("tauditwo.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:05 SGT 2010
     */
    public int updateAuditWorkOrderByExampleSelective(AuditWorkOrder record, AuditWorkOrderExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("tauditwo.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:05 SGT 2010
     */
    public int updateAuditWorkOrderByExample(AuditWorkOrder record, AuditWorkOrderExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("tauditwo.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:05 SGT 2010
     */
    public int updateAuditWorkOrderByPrimaryKeySelective(AuditWorkOrder record) {
        int rows = getSqlMapClientTemplate().update("tauditwo.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:05 SGT 2010
     */
    public int updateAuditWorkOrderByPrimaryKey(AuditWorkOrder record) {
        int rows = getSqlMapClientTemplate().update("tauditwo.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:05 SGT 2010
     */
    private static class UpdateByExampleParms extends AuditWorkOrderExample {
        private Object record;

        public UpdateByExampleParms(Object record, AuditWorkOrderExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}