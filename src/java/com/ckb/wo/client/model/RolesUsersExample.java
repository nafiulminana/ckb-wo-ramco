package com.ckb.wo.client.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RolesUsersExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table trole_tuser
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table trole_tuser
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	protected List<Criteria> oredCriteria;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table trole_tuser
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	protected String limitClause;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole_tuser
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	public RolesUsersExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole_tuser
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	protected RolesUsersExample(RolesUsersExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
		this.limitClause = example.limitClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole_tuser
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole_tuser
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole_tuser
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole_tuser
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole_tuser
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole_tuser
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole_tuser
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole_tuser
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	public void setLimitClause(String limitClause) {
		this.limitClause = limitClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole_tuser
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	public String getLimitClause() {
		return limitClause;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table trole_tuser
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andTroleTuserPkIsNull() {
			addCriterion("trole_tuser_pk is null");
			return this;
		}

		public Criteria andTroleTuserPkIsNotNull() {
			addCriterion("trole_tuser_pk is not null");
			return this;
		}

		public Criteria andTroleTuserPkEqualTo(Long value) {
			addCriterion("trole_tuser_pk =", value, "troleTuserPk");
			return this;
		}

		public Criteria andTroleTuserPkNotEqualTo(Long value) {
			addCriterion("trole_tuser_pk <>", value, "troleTuserPk");
			return this;
		}

		public Criteria andTroleTuserPkGreaterThan(Long value) {
			addCriterion("trole_tuser_pk >", value, "troleTuserPk");
			return this;
		}

		public Criteria andTroleTuserPkGreaterThanOrEqualTo(Long value) {
			addCriterion("trole_tuser_pk >=", value, "troleTuserPk");
			return this;
		}

		public Criteria andTroleTuserPkLessThan(Long value) {
			addCriterion("trole_tuser_pk <", value, "troleTuserPk");
			return this;
		}

		public Criteria andTroleTuserPkLessThanOrEqualTo(Long value) {
			addCriterion("trole_tuser_pk <=", value, "troleTuserPk");
			return this;
		}

		public Criteria andTroleTuserPkIn(List<Long> values) {
			addCriterion("trole_tuser_pk in", values, "troleTuserPk");
			return this;
		}

		public Criteria andTroleTuserPkNotIn(List<Long> values) {
			addCriterion("trole_tuser_pk not in", values, "troleTuserPk");
			return this;
		}

		public Criteria andTroleTuserPkBetween(Long value1, Long value2) {
			addCriterion("trole_tuser_pk between", value1, value2,
					"troleTuserPk");
			return this;
		}

		public Criteria andTroleTuserPkNotBetween(Long value1, Long value2) {
			addCriterion("trole_tuser_pk not between", value1, value2,
					"troleTuserPk");
			return this;
		}

		public Criteria andTroleFkIsNull() {
			addCriterion("trole_fk is null");
			return this;
		}

		public Criteria andTroleFkIsNotNull() {
			addCriterion("trole_fk is not null");
			return this;
		}

		public Criteria andTroleFkEqualTo(Long value) {
			addCriterion("trole_fk =", value, "troleFk");
			return this;
		}

		public Criteria andTroleFkNotEqualTo(Long value) {
			addCriterion("trole_fk <>", value, "troleFk");
			return this;
		}

		public Criteria andTroleFkGreaterThan(Long value) {
			addCriterion("trole_fk >", value, "troleFk");
			return this;
		}

		public Criteria andTroleFkGreaterThanOrEqualTo(Long value) {
			addCriterion("trole_fk >=", value, "troleFk");
			return this;
		}

		public Criteria andTroleFkLessThan(Long value) {
			addCriterion("trole_fk <", value, "troleFk");
			return this;
		}

		public Criteria andTroleFkLessThanOrEqualTo(Long value) {
			addCriterion("trole_fk <=", value, "troleFk");
			return this;
		}

		public Criteria andTroleFkIn(List<Long> values) {
			addCriterion("trole_fk in", values, "troleFk");
			return this;
		}

		public Criteria andTroleFkNotIn(List<Long> values) {
			addCriterion("trole_fk not in", values, "troleFk");
			return this;
		}

		public Criteria andTroleFkBetween(Long value1, Long value2) {
			addCriterion("trole_fk between", value1, value2, "troleFk");
			return this;
		}

		public Criteria andTroleFkNotBetween(Long value1, Long value2) {
			addCriterion("trole_fk not between", value1, value2, "troleFk");
			return this;
		}

		public Criteria andEmployeeIdIsNull() {
			addCriterion("employee_id is null");
			return this;
		}

		public Criteria andEmployeeIdIsNotNull() {
			addCriterion("employee_id is not null");
			return this;
		}

		public Criteria andEmployeeIdEqualTo(String value) {
			addCriterion("employee_id =", value, "employeeId");
			return this;
		}

		public Criteria andEmployeeIdNotEqualTo(String value) {
			addCriterion("employee_id <>", value, "employeeId");
			return this;
		}

		public Criteria andEmployeeIdGreaterThan(String value) {
			addCriterion("employee_id >", value, "employeeId");
			return this;
		}

		public Criteria andEmployeeIdGreaterThanOrEqualTo(String value) {
			addCriterion("employee_id >=", value, "employeeId");
			return this;
		}

		public Criteria andEmployeeIdLessThan(String value) {
			addCriterion("employee_id <", value, "employeeId");
			return this;
		}

		public Criteria andEmployeeIdLessThanOrEqualTo(String value) {
			addCriterion("employee_id <=", value, "employeeId");
			return this;
		}

		public Criteria andEmployeeIdLike(String value) {
			addCriterion("employee_id like", value, "employeeId");
			return this;
		}

		public Criteria andEmployeeIdNotLike(String value) {
			addCriterion("employee_id not like", value, "employeeId");
			return this;
		}

		public Criteria andEmployeeIdIn(List<String> values) {
			addCriterion("employee_id in", values, "employeeId");
			return this;
		}

		public Criteria andEmployeeIdNotIn(List<String> values) {
			addCriterion("employee_id not in", values, "employeeId");
			return this;
		}

		public Criteria andEmployeeIdBetween(String value1, String value2) {
			addCriterion("employee_id between", value1, value2, "employeeId");
			return this;
		}

		public Criteria andEmployeeIdNotBetween(String value1, String value2) {
			addCriterion("employee_id not between", value1, value2,
					"employeeId");
			return this;
		}
	}
}