package com.ckb.wo.client.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class WorkOrderHistoryExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tworkorderhistory
     *
     * @ibatorgenerated Fri Jul 09 20:11:52 SGT 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tworkorderhistory
     *
     * @ibatorgenerated Fri Jul 09 20:11:52 SGT 2010
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tworkorderhistory
     *
     * @ibatorgenerated Fri Jul 09 20:11:52 SGT 2010
     */
    protected String limitClause;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tworkorderhistory
     *
     * @ibatorgenerated Fri Jul 09 20:11:52 SGT 2010
     */
    public WorkOrderHistoryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tworkorderhistory
     *
     * @ibatorgenerated Fri Jul 09 20:11:52 SGT 2010
     */
    protected WorkOrderHistoryExample(WorkOrderHistoryExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.limitClause = example.limitClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tworkorderhistory
     *
     * @ibatorgenerated Fri Jul 09 20:11:52 SGT 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tworkorderhistory
     *
     * @ibatorgenerated Fri Jul 09 20:11:52 SGT 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tworkorderhistory
     *
     * @ibatorgenerated Fri Jul 09 20:11:52 SGT 2010
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tworkorderhistory
     *
     * @ibatorgenerated Fri Jul 09 20:11:52 SGT 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tworkorderhistory
     *
     * @ibatorgenerated Fri Jul 09 20:11:52 SGT 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tworkorderhistory
     *
     * @ibatorgenerated Fri Jul 09 20:11:52 SGT 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tworkorderhistory
     *
     * @ibatorgenerated Fri Jul 09 20:11:52 SGT 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tworkorderhistory
     *
     * @ibatorgenerated Fri Jul 09 20:11:52 SGT 2010
     */
    public void setLimitClause(String limitClause) {
        this.limitClause = limitClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tworkorderhistory
     *
     * @ibatorgenerated Fri Jul 09 20:11:52 SGT 2010
     */
    public String getLimitClause() {
        return limitClause;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table tworkorderhistory
     *
     * @ibatorgenerated Fri Jul 09 20:11:52 SGT 2010
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andTworkorderhistoryPkIsNull() {
            addCriterion("tworkorderhistory_pk is null");
            return this;
        }

        public Criteria andTworkorderhistoryPkIsNotNull() {
            addCriterion("tworkorderhistory_pk is not null");
            return this;
        }

        public Criteria andTworkorderhistoryPkEqualTo(Long value) {
            addCriterion("tworkorderhistory_pk =", value, "tworkorderhistoryPk");
            return this;
        }

        public Criteria andTworkorderhistoryPkNotEqualTo(Long value) {
            addCriterion("tworkorderhistory_pk <>", value, "tworkorderhistoryPk");
            return this;
        }

        public Criteria andTworkorderhistoryPkGreaterThan(Long value) {
            addCriterion("tworkorderhistory_pk >", value, "tworkorderhistoryPk");
            return this;
        }

        public Criteria andTworkorderhistoryPkGreaterThanOrEqualTo(Long value) {
            addCriterion("tworkorderhistory_pk >=", value, "tworkorderhistoryPk");
            return this;
        }

        public Criteria andTworkorderhistoryPkLessThan(Long value) {
            addCriterion("tworkorderhistory_pk <", value, "tworkorderhistoryPk");
            return this;
        }

        public Criteria andTworkorderhistoryPkLessThanOrEqualTo(Long value) {
            addCriterion("tworkorderhistory_pk <=", value, "tworkorderhistoryPk");
            return this;
        }

        public Criteria andTworkorderhistoryPkIn(List<Long> values) {
            addCriterion("tworkorderhistory_pk in", values, "tworkorderhistoryPk");
            return this;
        }

        public Criteria andTworkorderhistoryPkNotIn(List<Long> values) {
            addCriterion("tworkorderhistory_pk not in", values, "tworkorderhistoryPk");
            return this;
        }

        public Criteria andTworkorderhistoryPkBetween(Long value1, Long value2) {
            addCriterion("tworkorderhistory_pk between", value1, value2, "tworkorderhistoryPk");
            return this;
        }

        public Criteria andTworkorderhistoryPkNotBetween(Long value1, Long value2) {
            addCriterion("tworkorderhistory_pk not between", value1, value2, "tworkorderhistoryPk");
            return this;
        }

        public Criteria andActionIsNull() {
            addCriterion("action is null");
            return this;
        }

        public Criteria andActionIsNotNull() {
            addCriterion("action is not null");
            return this;
        }

        public Criteria andActionEqualTo(String value) {
            addCriterion("action =", value, "action");
            return this;
        }

        public Criteria andActionNotEqualTo(String value) {
            addCriterion("action <>", value, "action");
            return this;
        }

        public Criteria andActionGreaterThan(String value) {
            addCriterion("action >", value, "action");
            return this;
        }

        public Criteria andActionGreaterThanOrEqualTo(String value) {
            addCriterion("action >=", value, "action");
            return this;
        }

        public Criteria andActionLessThan(String value) {
            addCriterion("action <", value, "action");
            return this;
        }

        public Criteria andActionLessThanOrEqualTo(String value) {
            addCriterion("action <=", value, "action");
            return this;
        }

        public Criteria andActionLike(String value) {
            addCriterion("action like", value, "action");
            return this;
        }

        public Criteria andActionNotLike(String value) {
            addCriterion("action not like", value, "action");
            return this;
        }

        public Criteria andActionIn(List<String> values) {
            addCriterion("action in", values, "action");
            return this;
        }

        public Criteria andActionNotIn(List<String> values) {
            addCriterion("action not in", values, "action");
            return this;
        }

        public Criteria andActionBetween(String value1, String value2) {
            addCriterion("action between", value1, value2, "action");
            return this;
        }

        public Criteria andActionNotBetween(String value1, String value2) {
            addCriterion("action not between", value1, value2, "action");
            return this;
        }

        public Criteria andActiondateIsNull() {
            addCriterion("actiondate is null");
            return this;
        }

        public Criteria andActiondateIsNotNull() {
            addCriterion("actiondate is not null");
            return this;
        }

        public Criteria andActiondateEqualTo(Date value) {
            addCriterionForJDBCDate("actiondate =", value, "actiondate");
            return this;
        }

        public Criteria andActiondateNotEqualTo(Date value) {
            addCriterionForJDBCDate("actiondate <>", value, "actiondate");
            return this;
        }

        public Criteria andActiondateGreaterThan(Date value) {
            addCriterionForJDBCDate("actiondate >", value, "actiondate");
            return this;
        }

        public Criteria andActiondateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("actiondate >=", value, "actiondate");
            return this;
        }

        public Criteria andActiondateLessThan(Date value) {
            addCriterionForJDBCDate("actiondate <", value, "actiondate");
            return this;
        }

        public Criteria andActiondateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("actiondate <=", value, "actiondate");
            return this;
        }

        public Criteria andActiondateIn(List<Date> values) {
            addCriterionForJDBCDate("actiondate in", values, "actiondate");
            return this;
        }

        public Criteria andActiondateNotIn(List<Date> values) {
            addCriterionForJDBCDate("actiondate not in", values, "actiondate");
            return this;
        }

        public Criteria andActiondateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("actiondate between", value1, value2, "actiondate");
            return this;
        }

        public Criteria andActiondateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("actiondate not between", value1, value2, "actiondate");
            return this;
        }

        public Criteria andActionbyIsNull() {
            addCriterion("actionby is null");
            return this;
        }

        public Criteria andActionbyIsNotNull() {
            addCriterion("actionby is not null");
            return this;
        }

        public Criteria andActionbyEqualTo(String value) {
            addCriterion("actionby =", value, "actionby");
            return this;
        }

        public Criteria andActionbyNotEqualTo(String value) {
            addCriterion("actionby <>", value, "actionby");
            return this;
        }

        public Criteria andActionbyGreaterThan(String value) {
            addCriterion("actionby >", value, "actionby");
            return this;
        }

        public Criteria andActionbyGreaterThanOrEqualTo(String value) {
            addCriterion("actionby >=", value, "actionby");
            return this;
        }

        public Criteria andActionbyLessThan(String value) {
            addCriterion("actionby <", value, "actionby");
            return this;
        }

        public Criteria andActionbyLessThanOrEqualTo(String value) {
            addCriterion("actionby <=", value, "actionby");
            return this;
        }

        public Criteria andActionbyLike(String value) {
            addCriterion("actionby like", value, "actionby");
            return this;
        }

        public Criteria andActionbyNotLike(String value) {
            addCriterion("actionby not like", value, "actionby");
            return this;
        }

        public Criteria andActionbyIn(List<String> values) {
            addCriterion("actionby in", values, "actionby");
            return this;
        }

        public Criteria andActionbyNotIn(List<String> values) {
            addCriterion("actionby not in", values, "actionby");
            return this;
        }

        public Criteria andActionbyBetween(String value1, String value2) {
            addCriterion("actionby between", value1, value2, "actionby");
            return this;
        }

        public Criteria andActionbyNotBetween(String value1, String value2) {
            addCriterion("actionby not between", value1, value2, "actionby");
            return this;
        }

        public Criteria andChangesIsNull() {
            addCriterion("changes is null");
            return this;
        }

        public Criteria andChangesIsNotNull() {
            addCriterion("changes is not null");
            return this;
        }

        public Criteria andChangesEqualTo(String value) {
            addCriterion("changes =", value, "changes");
            return this;
        }

        public Criteria andChangesNotEqualTo(String value) {
            addCriterion("changes <>", value, "changes");
            return this;
        }

        public Criteria andChangesGreaterThan(String value) {
            addCriterion("changes >", value, "changes");
            return this;
        }

        public Criteria andChangesGreaterThanOrEqualTo(String value) {
            addCriterion("changes >=", value, "changes");
            return this;
        }

        public Criteria andChangesLessThan(String value) {
            addCriterion("changes <", value, "changes");
            return this;
        }

        public Criteria andChangesLessThanOrEqualTo(String value) {
            addCriterion("changes <=", value, "changes");
            return this;
        }

        public Criteria andChangesLike(String value) {
            addCriterion("changes like", value, "changes");
            return this;
        }

        public Criteria andChangesNotLike(String value) {
            addCriterion("changes not like", value, "changes");
            return this;
        }

        public Criteria andChangesIn(List<String> values) {
            addCriterion("changes in", values, "changes");
            return this;
        }

        public Criteria andChangesNotIn(List<String> values) {
            addCriterion("changes not in", values, "changes");
            return this;
        }

        public Criteria andChangesBetween(String value1, String value2) {
            addCriterion("changes between", value1, value2, "changes");
            return this;
        }

        public Criteria andChangesNotBetween(String value1, String value2) {
            addCriterion("changes not between", value1, value2, "changes");
            return this;
        }

        public Criteria andTworkorderFkIsNull() {
            addCriterion("tworkorder_fk is null");
            return this;
        }

        public Criteria andTworkorderFkIsNotNull() {
            addCriterion("tworkorder_fk is not null");
            return this;
        }

        public Criteria andTworkorderFkEqualTo(Long value) {
            addCriterion("tworkorder_fk =", value, "tworkorderFk");
            return this;
        }

        public Criteria andTworkorderFkNotEqualTo(Long value) {
            addCriterion("tworkorder_fk <>", value, "tworkorderFk");
            return this;
        }

        public Criteria andTworkorderFkGreaterThan(Long value) {
            addCriterion("tworkorder_fk >", value, "tworkorderFk");
            return this;
        }

        public Criteria andTworkorderFkGreaterThanOrEqualTo(Long value) {
            addCriterion("tworkorder_fk >=", value, "tworkorderFk");
            return this;
        }

        public Criteria andTworkorderFkLessThan(Long value) {
            addCriterion("tworkorder_fk <", value, "tworkorderFk");
            return this;
        }

        public Criteria andTworkorderFkLessThanOrEqualTo(Long value) {
            addCriterion("tworkorder_fk <=", value, "tworkorderFk");
            return this;
        }

        public Criteria andTworkorderFkIn(List<Long> values) {
            addCriterion("tworkorder_fk in", values, "tworkorderFk");
            return this;
        }

        public Criteria andTworkorderFkNotIn(List<Long> values) {
            addCriterion("tworkorder_fk not in", values, "tworkorderFk");
            return this;
        }

        public Criteria andTworkorderFkBetween(Long value1, Long value2) {
            addCriterion("tworkorder_fk between", value1, value2, "tworkorderFk");
            return this;
        }

        public Criteria andTworkorderFkNotBetween(Long value1, Long value2) {
            addCriterion("tworkorder_fk not between", value1, value2, "tworkorderFk");
            return this;
        }
    }
}