package com.ckb.wo.client.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class LevelExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tlevel
     *
     * @ibatorgenerated Thu Jul 01 20:08:58 SGT 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tlevel
     *
     * @ibatorgenerated Thu Jul 01 20:08:58 SGT 2010
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tlevel
     *
     * @ibatorgenerated Thu Jul 01 20:08:58 SGT 2010
     */
    protected String limitClause;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tlevel
     *
     * @ibatorgenerated Thu Jul 01 20:08:58 SGT 2010
     */
    public LevelExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tlevel
     *
     * @ibatorgenerated Thu Jul 01 20:08:58 SGT 2010
     */
    protected LevelExample(LevelExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.limitClause = example.limitClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tlevel
     *
     * @ibatorgenerated Thu Jul 01 20:08:58 SGT 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tlevel
     *
     * @ibatorgenerated Thu Jul 01 20:08:58 SGT 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tlevel
     *
     * @ibatorgenerated Thu Jul 01 20:08:58 SGT 2010
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tlevel
     *
     * @ibatorgenerated Thu Jul 01 20:08:58 SGT 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tlevel
     *
     * @ibatorgenerated Thu Jul 01 20:08:58 SGT 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tlevel
     *
     * @ibatorgenerated Thu Jul 01 20:08:58 SGT 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tlevel
     *
     * @ibatorgenerated Thu Jul 01 20:08:58 SGT 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tlevel
     *
     * @ibatorgenerated Thu Jul 01 20:08:58 SGT 2010
     */
    public void setLimitClause(String limitClause) {
        this.limitClause = limitClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tlevel
     *
     * @ibatorgenerated Thu Jul 01 20:08:58 SGT 2010
     */
    public String getLimitClause() {
        return limitClause;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table tlevel
     *
     * @ibatorgenerated Thu Jul 01 20:08:58 SGT 2010
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andLevelIdIsNull() {
            addCriterion("level_id is null");
            return this;
        }

        public Criteria andLevelIdIsNotNull() {
            addCriterion("level_id is not null");
            return this;
        }

        public Criteria andLevelIdEqualTo(String value) {
            addCriterion("level_id =", value, "levelId");
            return this;
        }

        public Criteria andLevelIdNotEqualTo(String value) {
            addCriterion("level_id <>", value, "levelId");
            return this;
        }

        public Criteria andLevelIdGreaterThan(String value) {
            addCriterion("level_id >", value, "levelId");
            return this;
        }

        public Criteria andLevelIdGreaterThanOrEqualTo(String value) {
            addCriterion("level_id >=", value, "levelId");
            return this;
        }

        public Criteria andLevelIdLessThan(String value) {
            addCriterion("level_id <", value, "levelId");
            return this;
        }

        public Criteria andLevelIdLessThanOrEqualTo(String value) {
            addCriterion("level_id <=", value, "levelId");
            return this;
        }

        public Criteria andLevelIdLike(String value) {
            addCriterion("level_id like", value, "levelId");
            return this;
        }

        public Criteria andLevelIdNotLike(String value) {
            addCriterion("level_id not like", value, "levelId");
            return this;
        }

        public Criteria andLevelIdIn(List<String> values) {
            addCriterion("level_id in", values, "levelId");
            return this;
        }

        public Criteria andLevelIdNotIn(List<String> values) {
            addCriterion("level_id not in", values, "levelId");
            return this;
        }

        public Criteria andLevelIdBetween(String value1, String value2) {
            addCriterion("level_id between", value1, value2, "levelId");
            return this;
        }

        public Criteria andLevelIdNotBetween(String value1, String value2) {
            addCriterion("level_id not between", value1, value2, "levelId");
            return this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("description is null");
            return this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("description is not null");
            return this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            addCriterion("description =", value, "description");
            return this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            addCriterion("description <>", value, "description");
            return this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            addCriterion("description >", value, "description");
            return this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("description >=", value, "description");
            return this;
        }

        public Criteria andDescriptionLessThan(String value) {
            addCriterion("description <", value, "description");
            return this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            addCriterion("description <=", value, "description");
            return this;
        }

        public Criteria andDescriptionLike(String value) {
            addCriterion("description like", value, "description");
            return this;
        }

        public Criteria andDescriptionNotLike(String value) {
            addCriterion("description not like", value, "description");
            return this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("description in", values, "description");
            return this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("description not in", values, "description");
            return this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("description between", value1, value2, "description");
            return this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("description not between", value1, value2, "description");
            return this;
        }

        public Criteria andLevelValueIsNull() {
            addCriterion("level_value is null");
            return this;
        }

        public Criteria andLevelValueIsNotNull() {
            addCriterion("level_value is not null");
            return this;
        }

        public Criteria andLevelValueEqualTo(Integer value) {
            addCriterion("level_value =", value, "levelValue");
            return this;
        }

        public Criteria andLevelValueNotEqualTo(Integer value) {
            addCriterion("level_value <>", value, "levelValue");
            return this;
        }

        public Criteria andLevelValueGreaterThan(Integer value) {
            addCriterion("level_value >", value, "levelValue");
            return this;
        }

        public Criteria andLevelValueGreaterThanOrEqualTo(Integer value) {
            addCriterion("level_value >=", value, "levelValue");
            return this;
        }

        public Criteria andLevelValueLessThan(Integer value) {
            addCriterion("level_value <", value, "levelValue");
            return this;
        }

        public Criteria andLevelValueLessThanOrEqualTo(Integer value) {
            addCriterion("level_value <=", value, "levelValue");
            return this;
        }

        public Criteria andLevelValueIn(List<Integer> values) {
            addCriterion("level_value in", values, "levelValue");
            return this;
        }

        public Criteria andLevelValueNotIn(List<Integer> values) {
            addCriterion("level_value not in", values, "levelValue");
            return this;
        }

        public Criteria andLevelValueBetween(Integer value1, Integer value2) {
            addCriterion("level_value between", value1, value2, "levelValue");
            return this;
        }

        public Criteria andLevelValueNotBetween(Integer value1, Integer value2) {
            addCriterion("level_value not between", value1, value2, "levelValue");
            return this;
        }
    }
}