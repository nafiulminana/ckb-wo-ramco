package com.ckb.wo.client.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AuditWorkOrderExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:03 SGT 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:03 SGT 2010
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:03 SGT 2010
     */
    protected String limitClause;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:03 SGT 2010
     */
    public AuditWorkOrderExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:03 SGT 2010
     */
    protected AuditWorkOrderExample(AuditWorkOrderExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.limitClause = example.limitClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:03 SGT 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:03 SGT 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:03 SGT 2010
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:03 SGT 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:03 SGT 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:03 SGT 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:03 SGT 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:03 SGT 2010
     */
    public void setLimitClause(String limitClause) {
        this.limitClause = limitClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:03 SGT 2010
     */
    public String getLimitClause() {
        return limitClause;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table tauditwo
     *
     * @ibatorgenerated Tue Jul 20 19:21:03 SGT 2010
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andTauditwoPkIsNull() {
            addCriterion("atauditwo.tauditwo_pk is null");
            return this;
        }

        public Criteria andTauditwoPkIsNotNull() {
            addCriterion("atauditwo.tauditwo_pk is not null");
            return this;
        }

        public Criteria andTauditwoPkEqualTo(Long value) {
            addCriterion("atauditwo.tauditwo_pk =", value, "tauditwoPk");
            return this;
        }

        public Criteria andTauditwoPkNotEqualTo(Long value) {
            addCriterion("atauditwo.tauditwo_pk <>", value, "tauditwoPk");
            return this;
        }

        public Criteria andTauditwoPkGreaterThan(Long value) {
            addCriterion("atauditwo.tauditwo_pk >", value, "tauditwoPk");
            return this;
        }

        public Criteria andTauditwoPkGreaterThanOrEqualTo(Long value) {
            addCriterion("atauditwo.tauditwo_pk >=", value, "tauditwoPk");
            return this;
        }

        public Criteria andTauditwoPkLessThan(Long value) {
            addCriterion("atauditwo.tauditwo_pk <", value, "tauditwoPk");
            return this;
        }

        public Criteria andTauditwoPkLessThanOrEqualTo(Long value) {
            addCriterion("atauditwo.tauditwo_pk <=", value, "tauditwoPk");
            return this;
        }

        public Criteria andTauditwoPkIn(List<Long> values) {
            addCriterion("atauditwo.tauditwo_pk in", values, "tauditwoPk");
            return this;
        }

        public Criteria andTauditwoPkNotIn(List<Long> values) {
            addCriterion("atauditwo.tauditwo_pk not in", values, "tauditwoPk");
            return this;
        }

        public Criteria andTauditwoPkBetween(Long value1, Long value2) {
            addCriterion("atauditwo.tauditwo_pk between", value1, value2, "tauditwoPk");
            return this;
        }

        public Criteria andTauditwoPkNotBetween(Long value1, Long value2) {
            addCriterion("atauditwo.tauditwo_pk not between", value1, value2, "tauditwoPk");
            return this;
        }

        public Criteria andTworkorderFkIsNull() {
            addCriterion("atauditwo.tworkorder_fk is null");
            return this;
        }

        public Criteria andTworkorderFkIsNotNull() {
            addCriterion("atauditwo.tworkorder_fk is not null");
            return this;
        }

        public Criteria andTworkorderFkEqualTo(Long value) {
            addCriterion("atauditwo.tworkorder_fk =", value, "tworkorderFk");
            return this;
        }

        public Criteria andTworkorderFkNotEqualTo(Long value) {
            addCriterion("atauditwo.tworkorder_fk <>", value, "tworkorderFk");
            return this;
        }

        public Criteria andTworkorderFkGreaterThan(Long value) {
            addCriterion("atauditwo.tworkorder_fk >", value, "tworkorderFk");
            return this;
        }

        public Criteria andTworkorderFkGreaterThanOrEqualTo(Long value) {
            addCriterion("atauditwo.tworkorder_fk >=", value, "tworkorderFk");
            return this;
        }

        public Criteria andTworkorderFkLessThan(Long value) {
            addCriterion("atauditwo.tworkorder_fk <", value, "tworkorderFk");
            return this;
        }

        public Criteria andTworkorderFkLessThanOrEqualTo(Long value) {
            addCriterion("atauditwo.tworkorder_fk <=", value, "tworkorderFk");
            return this;
        }

        public Criteria andTworkorderFkIn(List<Long> values) {
            addCriterion("atauditwo.tworkorder_fk in", values, "tworkorderFk");
            return this;
        }

        public Criteria andTworkorderFkNotIn(List<Long> values) {
            addCriterion("atauditwo.tworkorder_fk not in", values, "tworkorderFk");
            return this;
        }

        public Criteria andTworkorderFkBetween(Long value1, Long value2) {
            addCriterion("atauditwo.tworkorder_fk between", value1, value2, "tworkorderFk");
            return this;
        }

        public Criteria andTworkorderFkNotBetween(Long value1, Long value2) {
            addCriterion("atauditwo.tworkorder_fk not between", value1, value2, "tworkorderFk");
            return this;
        }

        public Criteria andEmployeeIdIsNull() {
            addCriterion("atauditwo.employee_id is null");
            return this;
        }

        public Criteria andEmployeeIdIsNotNull() {
            addCriterion("atauditwo.employee_id is not null");
            return this;
        }

        public Criteria andEmployeeIdEqualTo(String value) {
            addCriterion("atauditwo.employee_id =", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdNotEqualTo(String value) {
            addCriterion("atauditwo.employee_id <>", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdGreaterThan(String value) {
            addCriterion("atauditwo.employee_id >", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdGreaterThanOrEqualTo(String value) {
            addCriterion("atauditwo.employee_id >=", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdLessThan(String value) {
            addCriterion("atauditwo.employee_id <", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdLessThanOrEqualTo(String value) {
            addCriterion("atauditwo.employee_id <=", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdLike(String value) {
            addCriterion("atauditwo.employee_id like", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdNotLike(String value) {
            addCriterion("atauditwo.employee_id not like", value, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdIn(List<String> values) {
            addCriterion("atauditwo.employee_id in", values, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdNotIn(List<String> values) {
            addCriterion("atauditwo.employee_id not in", values, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdBetween(String value1, String value2) {
            addCriterion("atauditwo.employee_id between", value1, value2, "employeeId");
            return this;
        }

        public Criteria andEmployeeIdNotBetween(String value1, String value2) {
            addCriterion("atauditwo.employee_id not between", value1, value2, "employeeId");
            return this;
        }

        public Criteria andActionIsNull() {
            addCriterion("atauditwo.action is null");
            return this;
        }

        public Criteria andActionIsNotNull() {
            addCriterion("atauditwo.action is not null");
            return this;
        }

        public Criteria andActionEqualTo(String value) {
            addCriterion("atauditwo.action =", value, "action");
            return this;
        }

        public Criteria andActionNotEqualTo(String value) {
            addCriterion("atauditwo.action <>", value, "action");
            return this;
        }

        public Criteria andActionGreaterThan(String value) {
            addCriterion("atauditwo.action >", value, "action");
            return this;
        }

        public Criteria andActionGreaterThanOrEqualTo(String value) {
            addCriterion("atauditwo.action >=", value, "action");
            return this;
        }

        public Criteria andActionLessThan(String value) {
            addCriterion("atauditwo.action <", value, "action");
            return this;
        }

        public Criteria andActionLessThanOrEqualTo(String value) {
            addCriterion("atauditwo.action <=", value, "action");
            return this;
        }

        public Criteria andActionLike(String value) {
            addCriterion("atauditwo.action like", value, "action");
            return this;
        }

        public Criteria andActionNotLike(String value) {
            addCriterion("atauditwo.action not like", value, "action");
            return this;
        }

        public Criteria andActionIn(List<String> values) {
            addCriterion("atauditwo.action in", values, "action");
            return this;
        }

        public Criteria andActionNotIn(List<String> values) {
            addCriterion("atauditwo.action not in", values, "action");
            return this;
        }

        public Criteria andActionBetween(String value1, String value2) {
            addCriterion("atauditwo.action between", value1, value2, "action");
            return this;
        }

        public Criteria andActionNotBetween(String value1, String value2) {
            addCriterion("atauditwo.action not between", value1, value2, "action");
            return this;
        }

        public Criteria andTotalactionIsNull() {
            addCriterion("atauditwo.totalaction is null");
            return this;
        }

        public Criteria andTotalactionIsNotNull() {
            addCriterion("atauditwo.totalaction is not null");
            return this;
        }

        public Criteria andTotalactionEqualTo(Integer value) {
            addCriterion("atauditwo.totalaction =", value, "totalaction");
            return this;
        }

        public Criteria andTotalactionNotEqualTo(Integer value) {
            addCriterion("atauditwo.totalaction <>", value, "totalaction");
            return this;
        }

        public Criteria andTotalactionGreaterThan(Integer value) {
            addCriterion("atauditwo.totalaction >", value, "totalaction");
            return this;
        }

        public Criteria andTotalactionGreaterThanOrEqualTo(Integer value) {
            addCriterion("atauditwo.totalaction >=", value, "totalaction");
            return this;
        }

        public Criteria andTotalactionLessThan(Integer value) {
            addCriterion("atauditwo.totalaction <", value, "totalaction");
            return this;
        }

        public Criteria andTotalactionLessThanOrEqualTo(Integer value) {
            addCriterion("atauditwo.totalaction <=", value, "totalaction");
            return this;
        }

        public Criteria andTotalactionIn(List<Integer> values) {
            addCriterion("atauditwo.totalaction in", values, "totalaction");
            return this;
        }

        public Criteria andTotalactionNotIn(List<Integer> values) {
            addCriterion("atauditwo.totalaction not in", values, "totalaction");
            return this;
        }

        public Criteria andTotalactionBetween(Integer value1, Integer value2) {
            addCriterion("atauditwo.totalaction between", value1, value2, "totalaction");
            return this;
        }

        public Criteria andTotalactionNotBetween(Integer value1, Integer value2) {
            addCriterion("atauditwo.totalaction not between", value1, value2, "totalaction");
            return this;
        }
    }
}