package com.ckb.wo.client.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class WorkOrderFlowExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table tworkorderflow
	 * @ibatorgenerated  Mon Aug 16 17:24:26 SGT 2010
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table tworkorderflow
	 * @ibatorgenerated  Mon Aug 16 17:24:26 SGT 2010
	 */
	protected List<Criteria> oredCriteria;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table tworkorderflow
	 * @ibatorgenerated  Mon Aug 16 17:24:26 SGT 2010
	 */
	protected String limitClause;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tworkorderflow
	 * @ibatorgenerated  Mon Aug 16 17:24:26 SGT 2010
	 */
	public WorkOrderFlowExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tworkorderflow
	 * @ibatorgenerated  Mon Aug 16 17:24:26 SGT 2010
	 */
	protected WorkOrderFlowExample(WorkOrderFlowExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
		this.limitClause = example.limitClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tworkorderflow
	 * @ibatorgenerated  Mon Aug 16 17:24:26 SGT 2010
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tworkorderflow
	 * @ibatorgenerated  Mon Aug 16 17:24:26 SGT 2010
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tworkorderflow
	 * @ibatorgenerated  Mon Aug 16 17:24:26 SGT 2010
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tworkorderflow
	 * @ibatorgenerated  Mon Aug 16 17:24:26 SGT 2010
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tworkorderflow
	 * @ibatorgenerated  Mon Aug 16 17:24:26 SGT 2010
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tworkorderflow
	 * @ibatorgenerated  Mon Aug 16 17:24:26 SGT 2010
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tworkorderflow
	 * @ibatorgenerated  Mon Aug 16 17:24:26 SGT 2010
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tworkorderflow
	 * @ibatorgenerated  Mon Aug 16 17:24:26 SGT 2010
	 */
	public void setLimitClause(String limitClause) {
		this.limitClause = limitClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tworkorderflow
	 * @ibatorgenerated  Mon Aug 16 17:24:26 SGT 2010
	 */
	public String getLimitClause() {
		return limitClause;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table tworkorderflow
	 * @ibatorgenerated  Mon Aug 16 17:24:26 SGT 2010
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andTworkorderflowPkIsNull() {
			addCriterion("tworkorderflow_pk is null");
			return this;
		}

		public Criteria andTworkorderflowPkIsNotNull() {
			addCriterion("tworkorderflow_pk is not null");
			return this;
		}

		public Criteria andTworkorderflowPkEqualTo(Long value) {
			addCriterion("tworkorderflow_pk =", value, "tworkorderflowPk");
			return this;
		}

		public Criteria andTworkorderflowPkNotEqualTo(Long value) {
			addCriterion("tworkorderflow_pk <>", value, "tworkorderflowPk");
			return this;
		}

		public Criteria andTworkorderflowPkGreaterThan(Long value) {
			addCriterion("tworkorderflow_pk >", value, "tworkorderflowPk");
			return this;
		}

		public Criteria andTworkorderflowPkGreaterThanOrEqualTo(Long value) {
			addCriterion("tworkorderflow_pk >=", value, "tworkorderflowPk");
			return this;
		}

		public Criteria andTworkorderflowPkLessThan(Long value) {
			addCriterion("tworkorderflow_pk <", value, "tworkorderflowPk");
			return this;
		}

		public Criteria andTworkorderflowPkLessThanOrEqualTo(Long value) {
			addCriterion("tworkorderflow_pk <=", value, "tworkorderflowPk");
			return this;
		}

		public Criteria andTworkorderflowPkIn(List<Long> values) {
			addCriterion("tworkorderflow_pk in", values, "tworkorderflowPk");
			return this;
		}

		public Criteria andTworkorderflowPkNotIn(List<Long> values) {
			addCriterion("tworkorderflow_pk not in", values, "tworkorderflowPk");
			return this;
		}

		public Criteria andTworkorderflowPkBetween(Long value1, Long value2) {
			addCriterion("tworkorderflow_pk between", value1, value2,
					"tworkorderflowPk");
			return this;
		}

		public Criteria andTworkorderflowPkNotBetween(Long value1, Long value2) {
			addCriterion("tworkorderflow_pk not between", value1, value2,
					"tworkorderflowPk");
			return this;
		}

		public Criteria andTworkorderFkIsNull() {
			addCriterion("tworkorder_fk is null");
			return this;
		}

		public Criteria andTworkorderFkIsNotNull() {
			addCriterion("tworkorder_fk is not null");
			return this;
		}

		public Criteria andTworkorderFkEqualTo(Long value) {
			addCriterion("tworkorder_fk =", value, "tworkorderFk");
			return this;
		}

		public Criteria andTworkorderFkNotEqualTo(Long value) {
			addCriterion("tworkorder_fk <>", value, "tworkorderFk");
			return this;
		}

		public Criteria andTworkorderFkGreaterThan(Long value) {
			addCriterion("tworkorder_fk >", value, "tworkorderFk");
			return this;
		}

		public Criteria andTworkorderFkGreaterThanOrEqualTo(Long value) {
			addCriterion("tworkorder_fk >=", value, "tworkorderFk");
			return this;
		}

		public Criteria andTworkorderFkLessThan(Long value) {
			addCriterion("tworkorder_fk <", value, "tworkorderFk");
			return this;
		}

		public Criteria andTworkorderFkLessThanOrEqualTo(Long value) {
			addCriterion("tworkorder_fk <=", value, "tworkorderFk");
			return this;
		}

		public Criteria andTworkorderFkIn(List<Long> values) {
			addCriterion("tworkorder_fk in", values, "tworkorderFk");
			return this;
		}

		public Criteria andTworkorderFkNotIn(List<Long> values) {
			addCriterion("tworkorder_fk not in", values, "tworkorderFk");
			return this;
		}

		public Criteria andTworkorderFkBetween(Long value1, Long value2) {
			addCriterion("tworkorder_fk between", value1, value2,
					"tworkorderFk");
			return this;
		}

		public Criteria andTworkorderFkNotBetween(Long value1, Long value2) {
			addCriterion("tworkorder_fk not between", value1, value2,
					"tworkorderFk");
			return this;
		}

		public Criteria andEmployeeidIsNull() {
			addCriterion("employeeid is null");
			return this;
		}

		public Criteria andEmployeeidIsNotNull() {
			addCriterion("employeeid is not null");
			return this;
		}

		public Criteria andEmployeeidEqualTo(String value) {
			addCriterion("employeeid =", value, "employeeid");
			return this;
		}

		public Criteria andEmployeeidNotEqualTo(String value) {
			addCriterion("employeeid <>", value, "employeeid");
			return this;
		}

		public Criteria andEmployeeidGreaterThan(String value) {
			addCriterion("employeeid >", value, "employeeid");
			return this;
		}

		public Criteria andEmployeeidGreaterThanOrEqualTo(String value) {
			addCriterion("employeeid >=", value, "employeeid");
			return this;
		}

		public Criteria andEmployeeidLessThan(String value) {
			addCriterion("employeeid <", value, "employeeid");
			return this;
		}

		public Criteria andEmployeeidLessThanOrEqualTo(String value) {
			addCriterion("employeeid <=", value, "employeeid");
			return this;
		}

		public Criteria andEmployeeidLike(String value) {
			addCriterion("employeeid like", value, "employeeid");
			return this;
		}

		public Criteria andEmployeeidNotLike(String value) {
			addCriterion("employeeid not like", value, "employeeid");
			return this;
		}

		public Criteria andEmployeeidIn(List<String> values) {
			addCriterion("employeeid in", values, "employeeid");
			return this;
		}

		public Criteria andEmployeeidNotIn(List<String> values) {
			addCriterion("employeeid not in", values, "employeeid");
			return this;
		}

		public Criteria andEmployeeidBetween(String value1, String value2) {
			addCriterion("employeeid between", value1, value2, "employeeid");
			return this;
		}

		public Criteria andEmployeeidNotBetween(String value1, String value2) {
			addCriterion("employeeid not between", value1, value2, "employeeid");
			return this;
		}

		public Criteria andActiondateIsNull() {
			addCriterion("actiondate is null");
			return this;
		}

		public Criteria andActiondateIsNotNull() {
			addCriterion("actiondate is not null");
			return this;
		}

		public Criteria andActiondateEqualTo(Date value) {
			addCriterion("actiondate =", value, "actiondate");
			return this;
		}

		public Criteria andActiondateNotEqualTo(Date value) {
			addCriterion("actiondate <>", value, "actiondate");
			return this;
		}

		public Criteria andActiondateGreaterThan(Date value) {
			addCriterion("actiondate >", value, "actiondate");
			return this;
		}

		public Criteria andActiondateGreaterThanOrEqualTo(Date value) {
			addCriterion("actiondate >=", value, "actiondate");
			return this;
		}

		public Criteria andActiondateLessThan(Date value) {
			addCriterion("actiondate <", value, "actiondate");
			return this;
		}

		public Criteria andActiondateLessThanOrEqualTo(Date value) {
			addCriterion("actiondate <=", value, "actiondate");
			return this;
		}

		public Criteria andActiondateIn(List<Date> values) {
			addCriterion("actiondate in", values, "actiondate");
			return this;
		}

		public Criteria andActiondateNotIn(List<Date> values) {
			addCriterion("actiondate not in", values, "actiondate");
			return this;
		}

		public Criteria andActiondateBetween(Date value1, Date value2) {
			addCriterion("actiondate between", value1, value2, "actiondate");
			return this;
		}

		public Criteria andActiondateNotBetween(Date value1, Date value2) {
			addCriterion("actiondate not between", value1, value2, "actiondate");
			return this;
		}

		public Criteria andActiondoneIsNull() {
			addCriterion("actiondone is null");
			return this;
		}

		public Criteria andActiondoneIsNotNull() {
			addCriterion("actiondone is not null");
			return this;
		}

		public Criteria andActiondoneEqualTo(Boolean value) {
			addCriterion("actiondone =", value, "actiondone");
			return this;
		}

		public Criteria andActiondoneNotEqualTo(Boolean value) {
			addCriterion("actiondone <>", value, "actiondone");
			return this;
		}

		public Criteria andActiondoneGreaterThan(Boolean value) {
			addCriterion("actiondone >", value, "actiondone");
			return this;
		}

		public Criteria andActiondoneGreaterThanOrEqualTo(Boolean value) {
			addCriterion("actiondone >=", value, "actiondone");
			return this;
		}

		public Criteria andActiondoneLessThan(Boolean value) {
			addCriterion("actiondone <", value, "actiondone");
			return this;
		}

		public Criteria andActiondoneLessThanOrEqualTo(Boolean value) {
			addCriterion("actiondone <=", value, "actiondone");
			return this;
		}

		public Criteria andActiondoneIn(List<Boolean> values) {
			addCriterion("actiondone in", values, "actiondone");
			return this;
		}

		public Criteria andActiondoneNotIn(List<Boolean> values) {
			addCriterion("actiondone not in", values, "actiondone");
			return this;
		}

		public Criteria andActiondoneBetween(Boolean value1, Boolean value2) {
			addCriterion("actiondone between", value1, value2, "actiondone");
			return this;
		}

		public Criteria andActiondoneNotBetween(Boolean value1, Boolean value2) {
			addCriterion("actiondone not between", value1, value2, "actiondone");
			return this;
		}

		public Criteria andLevelIdIsNull() {
			addCriterion("level_id is null");
			return this;
		}

		public Criteria andLevelIdIsNotNull() {
			addCriterion("level_id is not null");
			return this;
		}

		public Criteria andLevelIdEqualTo(String value) {
			addCriterion("level_id =", value, "levelId");
			return this;
		}

		public Criteria andLevelIdNotEqualTo(String value) {
			addCriterion("level_id <>", value, "levelId");
			return this;
		}

		public Criteria andLevelIdGreaterThan(String value) {
			addCriterion("level_id >", value, "levelId");
			return this;
		}

		public Criteria andLevelIdGreaterThanOrEqualTo(String value) {
			addCriterion("level_id >=", value, "levelId");
			return this;
		}

		public Criteria andLevelIdLessThan(String value) {
			addCriterion("level_id <", value, "levelId");
			return this;
		}

		public Criteria andLevelIdLessThanOrEqualTo(String value) {
			addCriterion("level_id <=", value, "levelId");
			return this;
		}

		public Criteria andLevelIdLike(String value) {
			addCriterion("level_id like", value, "levelId");
			return this;
		}

		public Criteria andLevelIdNotLike(String value) {
			addCriterion("level_id not like", value, "levelId");
			return this;
		}

		public Criteria andLevelIdIn(List<String> values) {
			addCriterion("level_id in", values, "levelId");
			return this;
		}

		public Criteria andLevelIdNotIn(List<String> values) {
			addCriterion("level_id not in", values, "levelId");
			return this;
		}

		public Criteria andLevelIdBetween(String value1, String value2) {
			addCriterion("level_id between", value1, value2, "levelId");
			return this;
		}

		public Criteria andLevelIdNotBetween(String value1, String value2) {
			addCriterion("level_id not between", value1, value2, "levelId");
			return this;
		}

		public Criteria andGrantedIsNull() {
			addCriterion("granted is null");
			return this;
		}

		public Criteria andGrantedIsNotNull() {
			addCriterion("granted is not null");
			return this;
		}

		public Criteria andGrantedEqualTo(Boolean value) {
			addCriterion("granted =", value, "granted");
			return this;
		}

		public Criteria andGrantedNotEqualTo(Boolean value) {
			addCriterion("granted <>", value, "granted");
			return this;
		}

		public Criteria andGrantedGreaterThan(Boolean value) {
			addCriterion("granted >", value, "granted");
			return this;
		}

		public Criteria andGrantedGreaterThanOrEqualTo(Boolean value) {
			addCriterion("granted >=", value, "granted");
			return this;
		}

		public Criteria andGrantedLessThan(Boolean value) {
			addCriterion("granted <", value, "granted");
			return this;
		}

		public Criteria andGrantedLessThanOrEqualTo(Boolean value) {
			addCriterion("granted <=", value, "granted");
			return this;
		}

		public Criteria andGrantedIn(List<Boolean> values) {
			addCriterion("granted in", values, "granted");
			return this;
		}

		public Criteria andGrantedNotIn(List<Boolean> values) {
			addCriterion("granted not in", values, "granted");
			return this;
		}

		public Criteria andGrantedBetween(Boolean value1, Boolean value2) {
			addCriterion("granted between", value1, value2, "granted");
			return this;
		}

		public Criteria andGrantedNotBetween(Boolean value1, Boolean value2) {
			addCriterion("granted not between", value1, value2, "granted");
			return this;
		}

		public Criteria andOnbehalfemployeeidIsNull() {
			addCriterion("onbehalfemployeeid is null");
			return this;
		}

		public Criteria andOnbehalfemployeeidIsNotNull() {
			addCriterion("onbehalfemployeeid is not null");
			return this;
		}

		public Criteria andOnbehalfemployeeidEqualTo(String value) {
			addCriterion("onbehalfemployeeid =", value, "onbehalfemployeeid");
			return this;
		}

		public Criteria andOnbehalfemployeeidNotEqualTo(String value) {
			addCriterion("onbehalfemployeeid <>", value, "onbehalfemployeeid");
			return this;
		}

		public Criteria andOnbehalfemployeeidGreaterThan(String value) {
			addCriterion("onbehalfemployeeid >", value, "onbehalfemployeeid");
			return this;
		}

		public Criteria andOnbehalfemployeeidGreaterThanOrEqualTo(String value) {
			addCriterion("onbehalfemployeeid >=", value, "onbehalfemployeeid");
			return this;
		}

		public Criteria andOnbehalfemployeeidLessThan(String value) {
			addCriterion("onbehalfemployeeid <", value, "onbehalfemployeeid");
			return this;
		}

		public Criteria andOnbehalfemployeeidLessThanOrEqualTo(String value) {
			addCriterion("onbehalfemployeeid <=", value, "onbehalfemployeeid");
			return this;
		}

		public Criteria andOnbehalfemployeeidLike(String value) {
			addCriterion("onbehalfemployeeid like", value, "onbehalfemployeeid");
			return this;
		}

		public Criteria andOnbehalfemployeeidNotLike(String value) {
			addCriterion("onbehalfemployeeid not like", value,
					"onbehalfemployeeid");
			return this;
		}

		public Criteria andOnbehalfemployeeidIn(List<String> values) {
			addCriterion("onbehalfemployeeid in", values, "onbehalfemployeeid");
			return this;
		}

		public Criteria andOnbehalfemployeeidNotIn(List<String> values) {
			addCriterion("onbehalfemployeeid not in", values,
					"onbehalfemployeeid");
			return this;
		}

		public Criteria andOnbehalfemployeeidBetween(String value1,
				String value2) {
			addCriterion("onbehalfemployeeid between", value1, value2,
					"onbehalfemployeeid");
			return this;
		}

		public Criteria andOnbehalfemployeeidNotBetween(String value1,
				String value2) {
			addCriterion("onbehalfemployeeid not between", value1, value2,
					"onbehalfemployeeid");
			return this;
		}

		public Criteria andReasonIsNull() {
			addCriterion("reason is null");
			return this;
		}

		public Criteria andReasonIsNotNull() {
			addCriterion("reason is not null");
			return this;
		}

		public Criteria andReasonEqualTo(String value) {
			addCriterion("reason =", value, "reason");
			return this;
		}

		public Criteria andReasonNotEqualTo(String value) {
			addCriterion("reason <>", value, "reason");
			return this;
		}

		public Criteria andReasonGreaterThan(String value) {
			addCriterion("reason >", value, "reason");
			return this;
		}

		public Criteria andReasonGreaterThanOrEqualTo(String value) {
			addCriterion("reason >=", value, "reason");
			return this;
		}

		public Criteria andReasonLessThan(String value) {
			addCriterion("reason <", value, "reason");
			return this;
		}

		public Criteria andReasonLessThanOrEqualTo(String value) {
			addCriterion("reason <=", value, "reason");
			return this;
		}

		public Criteria andReasonLike(String value) {
			addCriterion("reason like", value, "reason");
			return this;
		}

		public Criteria andReasonNotLike(String value) {
			addCriterion("reason not like", value, "reason");
			return this;
		}

		public Criteria andReasonIn(List<String> values) {
			addCriterion("reason in", values, "reason");
			return this;
		}

		public Criteria andReasonNotIn(List<String> values) {
			addCriterion("reason not in", values, "reason");
			return this;
		}

		public Criteria andReasonBetween(String value1, String value2) {
			addCriterion("reason between", value1, value2, "reason");
			return this;
		}

		public Criteria andReasonNotBetween(String value1, String value2) {
			addCriterion("reason not between", value1, value2, "reason");
			return this;
		}

		public Criteria andOldwostatusIsNull() {
			addCriterion("oldwostatus is null");
			return this;
		}

		public Criteria andOldwostatusIsNotNull() {
			addCriterion("oldwostatus is not null");
			return this;
		}

		public Criteria andOldwostatusEqualTo(String value) {
			addCriterion("oldwostatus =", value, "oldwostatus");
			return this;
		}

		public Criteria andOldwostatusNotEqualTo(String value) {
			addCriterion("oldwostatus <>", value, "oldwostatus");
			return this;
		}

		public Criteria andOldwostatusGreaterThan(String value) {
			addCriterion("oldwostatus >", value, "oldwostatus");
			return this;
		}

		public Criteria andOldwostatusGreaterThanOrEqualTo(String value) {
			addCriterion("oldwostatus >=", value, "oldwostatus");
			return this;
		}

		public Criteria andOldwostatusLessThan(String value) {
			addCriterion("oldwostatus <", value, "oldwostatus");
			return this;
		}

		public Criteria andOldwostatusLessThanOrEqualTo(String value) {
			addCriterion("oldwostatus <=", value, "oldwostatus");
			return this;
		}

		public Criteria andOldwostatusLike(String value) {
			addCriterion("oldwostatus like", value, "oldwostatus");
			return this;
		}

		public Criteria andOldwostatusNotLike(String value) {
			addCriterion("oldwostatus not like", value, "oldwostatus");
			return this;
		}

		public Criteria andOldwostatusIn(List<String> values) {
			addCriterion("oldwostatus in", values, "oldwostatus");
			return this;
		}

		public Criteria andOldwostatusNotIn(List<String> values) {
			addCriterion("oldwostatus not in", values, "oldwostatus");
			return this;
		}

		public Criteria andOldwostatusBetween(String value1, String value2) {
			addCriterion("oldwostatus between", value1, value2, "oldwostatus");
			return this;
		}

		public Criteria andOldwostatusNotBetween(String value1, String value2) {
			addCriterion("oldwostatus not between", value1, value2,
					"oldwostatus");
			return this;
		}
	}
}