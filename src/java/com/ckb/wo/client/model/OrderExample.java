package com.ckb.wo.client.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OrderExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table torder
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table torder
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	protected List<Criteria> oredCriteria;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table torder
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	protected String limitClause;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table torder
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	public OrderExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table torder
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	protected OrderExample(OrderExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
		this.limitClause = example.limitClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table torder
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table torder
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table torder
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table torder
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table torder
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table torder
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table torder
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table torder
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	public void setLimitClause(String limitClause) {
		this.limitClause = limitClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table torder
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	public String getLimitClause() {
		return limitClause;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table torder
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andTorderPkIsNull() {
			addCriterion("torder_pk is null");
			return this;
		}

		public Criteria andTorderPkIsNotNull() {
			addCriterion("torder_pk is not null");
			return this;
		}

		public Criteria andTorderPkEqualTo(Long value) {
			addCriterion("torder_pk =", value, "torderPk");
			return this;
		}

		public Criteria andTorderPkNotEqualTo(Long value) {
			addCriterion("torder_pk <>", value, "torderPk");
			return this;
		}

		public Criteria andTorderPkGreaterThan(Long value) {
			addCriterion("torder_pk >", value, "torderPk");
			return this;
		}

		public Criteria andTorderPkGreaterThanOrEqualTo(Long value) {
			addCriterion("torder_pk >=", value, "torderPk");
			return this;
		}

		public Criteria andTorderPkLessThan(Long value) {
			addCriterion("torder_pk <", value, "torderPk");
			return this;
		}

		public Criteria andTorderPkLessThanOrEqualTo(Long value) {
			addCriterion("torder_pk <=", value, "torderPk");
			return this;
		}

		public Criteria andTorderPkIn(List<Long> values) {
			addCriterion("torder_pk in", values, "torderPk");
			return this;
		}

		public Criteria andTorderPkNotIn(List<Long> values) {
			addCriterion("torder_pk not in", values, "torderPk");
			return this;
		}

		public Criteria andTorderPkBetween(Long value1, Long value2) {
			addCriterion("torder_pk between", value1, value2, "torderPk");
			return this;
		}

		public Criteria andTorderPkNotBetween(Long value1, Long value2) {
			addCriterion("torder_pk not between", value1, value2, "torderPk");
			return this;
		}

		public Criteria andOrdercodeIsNull() {
			addCriterion("ordercode is null");
			return this;
		}

		public Criteria andOrdercodeIsNotNull() {
			addCriterion("ordercode is not null");
			return this;
		}

		public Criteria andOrdercodeEqualTo(String value) {
			addCriterion("ordercode =", value, "ordercode");
			return this;
		}

		public Criteria andOrdercodeNotEqualTo(String value) {
			addCriterion("ordercode <>", value, "ordercode");
			return this;
		}

		public Criteria andOrdercodeGreaterThan(String value) {
			addCriterion("ordercode >", value, "ordercode");
			return this;
		}

		public Criteria andOrdercodeGreaterThanOrEqualTo(String value) {
			addCriterion("ordercode >=", value, "ordercode");
			return this;
		}

		public Criteria andOrdercodeLessThan(String value) {
			addCriterion("ordercode <", value, "ordercode");
			return this;
		}

		public Criteria andOrdercodeLessThanOrEqualTo(String value) {
			addCriterion("ordercode <=", value, "ordercode");
			return this;
		}

		public Criteria andOrdercodeLike(String value) {
			addCriterion("ordercode like", value, "ordercode");
			return this;
		}

		public Criteria andOrdercodeNotLike(String value) {
			addCriterion("ordercode not like", value, "ordercode");
			return this;
		}

		public Criteria andOrdercodeIn(List<String> values) {
			addCriterion("ordercode in", values, "ordercode");
			return this;
		}

		public Criteria andOrdercodeNotIn(List<String> values) {
			addCriterion("ordercode not in", values, "ordercode");
			return this;
		}

		public Criteria andOrdercodeBetween(String value1, String value2) {
			addCriterion("ordercode between", value1, value2, "ordercode");
			return this;
		}

		public Criteria andOrdercodeNotBetween(String value1, String value2) {
			addCriterion("ordercode not between", value1, value2, "ordercode");
			return this;
		}

		public Criteria andOrdernameIsNull() {
			addCriterion("ordername is null");
			return this;
		}

		public Criteria andOrdernameIsNotNull() {
			addCriterion("ordername is not null");
			return this;
		}

		public Criteria andOrdernameEqualTo(String value) {
			addCriterion("ordername =", value, "ordername");
			return this;
		}

		public Criteria andOrdernameNotEqualTo(String value) {
			addCriterion("ordername <>", value, "ordername");
			return this;
		}

		public Criteria andOrdernameGreaterThan(String value) {
			addCriterion("ordername >", value, "ordername");
			return this;
		}

		public Criteria andOrdernameGreaterThanOrEqualTo(String value) {
			addCriterion("ordername >=", value, "ordername");
			return this;
		}

		public Criteria andOrdernameLessThan(String value) {
			addCriterion("ordername <", value, "ordername");
			return this;
		}

		public Criteria andOrdernameLessThanOrEqualTo(String value) {
			addCriterion("ordername <=", value, "ordername");
			return this;
		}

		public Criteria andOrdernameLike(String value) {
			addCriterion("ordername like", value, "ordername");
			return this;
		}

		public Criteria andOrdernameNotLike(String value) {
			addCriterion("ordername not like", value, "ordername");
			return this;
		}

		public Criteria andOrdernameIn(List<String> values) {
			addCriterion("ordername in", values, "ordername");
			return this;
		}

		public Criteria andOrdernameNotIn(List<String> values) {
			addCriterion("ordername not in", values, "ordername");
			return this;
		}

		public Criteria andOrdernameBetween(String value1, String value2) {
			addCriterion("ordername between", value1, value2, "ordername");
			return this;
		}

		public Criteria andOrdernameNotBetween(String value1, String value2) {
			addCriterion("ordername not between", value1, value2, "ordername");
			return this;
		}
	}
}