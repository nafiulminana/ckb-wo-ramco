package com.ckb.wo.client.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RoleExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table trole
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table trole
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	protected List<Criteria> oredCriteria;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table trole
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	protected String limitClause;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	public RoleExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	protected RoleExample(RoleExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
		this.limitClause = example.limitClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	public void setLimitClause(String limitClause) {
		this.limitClause = limitClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table trole
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	public String getLimitClause() {
		return limitClause;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table trole
	 * @ibatorgenerated  Fri Jul 16 14:31:56 SGT 2010
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andTrolePkIsNull() {
			addCriterion("trole_pk is null");
			return this;
		}

		public Criteria andTrolePkIsNotNull() {
			addCriterion("trole_pk is not null");
			return this;
		}

		public Criteria andTrolePkEqualTo(Long value) {
			addCriterion("trole_pk =", value, "trolePk");
			return this;
		}

		public Criteria andTrolePkNotEqualTo(Long value) {
			addCriterion("trole_pk <>", value, "trolePk");
			return this;
		}

		public Criteria andTrolePkGreaterThan(Long value) {
			addCriterion("trole_pk >", value, "trolePk");
			return this;
		}

		public Criteria andTrolePkGreaterThanOrEqualTo(Long value) {
			addCriterion("trole_pk >=", value, "trolePk");
			return this;
		}

		public Criteria andTrolePkLessThan(Long value) {
			addCriterion("trole_pk <", value, "trolePk");
			return this;
		}

		public Criteria andTrolePkLessThanOrEqualTo(Long value) {
			addCriterion("trole_pk <=", value, "trolePk");
			return this;
		}

		public Criteria andTrolePkIn(List<Long> values) {
			addCriterion("trole_pk in", values, "trolePk");
			return this;
		}

		public Criteria andTrolePkNotIn(List<Long> values) {
			addCriterion("trole_pk not in", values, "trolePk");
			return this;
		}

		public Criteria andTrolePkBetween(Long value1, Long value2) {
			addCriterion("trole_pk between", value1, value2, "trolePk");
			return this;
		}

		public Criteria andTrolePkNotBetween(Long value1, Long value2) {
			addCriterion("trole_pk not between", value1, value2, "trolePk");
			return this;
		}

		public Criteria andRolenameIsNull() {
			addCriterion("rolename is null");
			return this;
		}

		public Criteria andRolenameIsNotNull() {
			addCriterion("rolename is not null");
			return this;
		}

		public Criteria andRolenameEqualTo(String value) {
			addCriterion("rolename =", value, "rolename");
			return this;
		}

		public Criteria andRolenameNotEqualTo(String value) {
			addCriterion("rolename <>", value, "rolename");
			return this;
		}

		public Criteria andRolenameGreaterThan(String value) {
			addCriterion("rolename >", value, "rolename");
			return this;
		}

		public Criteria andRolenameGreaterThanOrEqualTo(String value) {
			addCriterion("rolename >=", value, "rolename");
			return this;
		}

		public Criteria andRolenameLessThan(String value) {
			addCriterion("rolename <", value, "rolename");
			return this;
		}

		public Criteria andRolenameLessThanOrEqualTo(String value) {
			addCriterion("rolename <=", value, "rolename");
			return this;
		}

		public Criteria andRolenameLike(String value) {
			addCriterion("rolename like", value, "rolename");
			return this;
		}

		public Criteria andRolenameNotLike(String value) {
			addCriterion("rolename not like", value, "rolename");
			return this;
		}

		public Criteria andRolenameIn(List<String> values) {
			addCriterion("rolename in", values, "rolename");
			return this;
		}

		public Criteria andRolenameNotIn(List<String> values) {
			addCriterion("rolename not in", values, "rolename");
			return this;
		}

		public Criteria andRolenameBetween(String value1, String value2) {
			addCriterion("rolename between", value1, value2, "rolename");
			return this;
		}

		public Criteria andRolenameNotBetween(String value1, String value2) {
			addCriterion("rolename not between", value1, value2, "rolename");
			return this;
		}
	}
}