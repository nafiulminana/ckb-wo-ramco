package com.ckb.wo.client.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OriContainerExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table oricontainer
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table oricontainer
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	protected List<Criteria> oredCriteria;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table oricontainer
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	protected String limitClause;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table oricontainer
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	public OriContainerExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table oricontainer
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	protected OriContainerExample(OriContainerExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
		this.limitClause = example.limitClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table oricontainer
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table oricontainer
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table oricontainer
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table oricontainer
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table oricontainer
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table oricontainer
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table oricontainer
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table oricontainer
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	public void setLimitClause(String limitClause) {
		this.limitClause = limitClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table oricontainer
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	public String getLimitClause() {
		return limitClause;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table oricontainer
	 * @ibatorgenerated  Tue Jun 29 17:37:52 SGT 2010
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andContainerdescIsNull() {
			addCriterion("containerdesc is null");
			return this;
		}

		public Criteria andContainerdescIsNotNull() {
			addCriterion("containerdesc is not null");
			return this;
		}

		public Criteria andContainerdescEqualTo(String value) {
			addCriterion("containerdesc =", value, "containerdesc");
			return this;
		}

		public Criteria andContainerdescNotEqualTo(String value) {
			addCriterion("containerdesc <>", value, "containerdesc");
			return this;
		}

		public Criteria andContainerdescGreaterThan(String value) {
			addCriterion("containerdesc >", value, "containerdesc");
			return this;
		}

		public Criteria andContainerdescGreaterThanOrEqualTo(String value) {
			addCriterion("containerdesc >=", value, "containerdesc");
			return this;
		}

		public Criteria andContainerdescLessThan(String value) {
			addCriterion("containerdesc <", value, "containerdesc");
			return this;
		}

		public Criteria andContainerdescLessThanOrEqualTo(String value) {
			addCriterion("containerdesc <=", value, "containerdesc");
			return this;
		}

		public Criteria andContainerdescLike(String value) {
			addCriterion("containerdesc like", value, "containerdesc");
			return this;
		}

		public Criteria andContainerdescNotLike(String value) {
			addCriterion("containerdesc not like", value, "containerdesc");
			return this;
		}

		public Criteria andContainerdescIn(List<String> values) {
			addCriterion("containerdesc in", values, "containerdesc");
			return this;
		}

		public Criteria andContainerdescNotIn(List<String> values) {
			addCriterion("containerdesc not in", values, "containerdesc");
			return this;
		}

		public Criteria andContainerdescBetween(String value1, String value2) {
			addCriterion("containerdesc between", value1, value2,
					"containerdesc");
			return this;
		}

		public Criteria andContainerdescNotBetween(String value1, String value2) {
			addCriterion("containerdesc not between", value1, value2,
					"containerdesc");
			return this;
		}

		public Criteria andServicemodeIsNull() {
			addCriterion("servicemode is null");
			return this;
		}

		public Criteria andServicemodeIsNotNull() {
			addCriterion("servicemode is not null");
			return this;
		}

		public Criteria andServicemodeEqualTo(String value) {
			addCriterion("servicemode =", value, "servicemode");
			return this;
		}

		public Criteria andServicemodeNotEqualTo(String value) {
			addCriterion("servicemode <>", value, "servicemode");
			return this;
		}

		public Criteria andServicemodeGreaterThan(String value) {
			addCriterion("servicemode >", value, "servicemode");
			return this;
		}

		public Criteria andServicemodeGreaterThanOrEqualTo(String value) {
			addCriterion("servicemode >=", value, "servicemode");
			return this;
		}

		public Criteria andServicemodeLessThan(String value) {
			addCriterion("servicemode <", value, "servicemode");
			return this;
		}

		public Criteria andServicemodeLessThanOrEqualTo(String value) {
			addCriterion("servicemode <=", value, "servicemode");
			return this;
		}

		public Criteria andServicemodeLike(String value) {
			addCriterion("servicemode like", value, "servicemode");
			return this;
		}

		public Criteria andServicemodeNotLike(String value) {
			addCriterion("servicemode not like", value, "servicemode");
			return this;
		}

		public Criteria andServicemodeIn(List<String> values) {
			addCriterion("servicemode in", values, "servicemode");
			return this;
		}

		public Criteria andServicemodeNotIn(List<String> values) {
			addCriterion("servicemode not in", values, "servicemode");
			return this;
		}

		public Criteria andServicemodeBetween(String value1, String value2) {
			addCriterion("servicemode between", value1, value2, "servicemode");
			return this;
		}

		public Criteria andServicemodeNotBetween(String value1, String value2) {
			addCriterion("servicemode not between", value1, value2,
					"servicemode");
			return this;
		}

		public Criteria andContainercodeIsNull() {
			addCriterion("containercode is null");
			return this;
		}

		public Criteria andContainercodeIsNotNull() {
			addCriterion("containercode is not null");
			return this;
		}

		public Criteria andContainercodeEqualTo(String value) {
			addCriterion("containercode =", value, "containercode");
			return this;
		}

		public Criteria andContainercodeNotEqualTo(String value) {
			addCriterion("containercode <>", value, "containercode");
			return this;
		}

		public Criteria andContainercodeGreaterThan(String value) {
			addCriterion("containercode >", value, "containercode");
			return this;
		}

		public Criteria andContainercodeGreaterThanOrEqualTo(String value) {
			addCriterion("containercode >=", value, "containercode");
			return this;
		}

		public Criteria andContainercodeLessThan(String value) {
			addCriterion("containercode <", value, "containercode");
			return this;
		}

		public Criteria andContainercodeLessThanOrEqualTo(String value) {
			addCriterion("containercode <=", value, "containercode");
			return this;
		}

		public Criteria andContainercodeLike(String value) {
			addCriterion("containercode like", value, "containercode");
			return this;
		}

		public Criteria andContainercodeNotLike(String value) {
			addCriterion("containercode not like", value, "containercode");
			return this;
		}

		public Criteria andContainercodeIn(List<String> values) {
			addCriterion("containercode in", values, "containercode");
			return this;
		}

		public Criteria andContainercodeNotIn(List<String> values) {
			addCriterion("containercode not in", values, "containercode");
			return this;
		}

		public Criteria andContainercodeBetween(String value1, String value2) {
			addCriterion("containercode between", value1, value2,
					"containercode");
			return this;
		}

		public Criteria andContainercodeNotBetween(String value1, String value2) {
			addCriterion("containercode not between", value1, value2,
					"containercode");
			return this;
		}
	}
}