package com.ckb.wo.client.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CurrencyExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tcurrency
     *
     * @ibatorgenerated Wed Jul 07 13:29:19 SGT 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tcurrency
     *
     * @ibatorgenerated Wed Jul 07 13:29:19 SGT 2010
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tcurrency
     *
     * @ibatorgenerated Wed Jul 07 13:29:19 SGT 2010
     */
    protected String limitClause;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tcurrency
     *
     * @ibatorgenerated Wed Jul 07 13:29:19 SGT 2010
     */
    public CurrencyExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tcurrency
     *
     * @ibatorgenerated Wed Jul 07 13:29:19 SGT 2010
     */
    protected CurrencyExample(CurrencyExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.limitClause = example.limitClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tcurrency
     *
     * @ibatorgenerated Wed Jul 07 13:29:19 SGT 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tcurrency
     *
     * @ibatorgenerated Wed Jul 07 13:29:19 SGT 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tcurrency
     *
     * @ibatorgenerated Wed Jul 07 13:29:19 SGT 2010
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tcurrency
     *
     * @ibatorgenerated Wed Jul 07 13:29:19 SGT 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tcurrency
     *
     * @ibatorgenerated Wed Jul 07 13:29:19 SGT 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tcurrency
     *
     * @ibatorgenerated Wed Jul 07 13:29:19 SGT 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tcurrency
     *
     * @ibatorgenerated Wed Jul 07 13:29:19 SGT 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tcurrency
     *
     * @ibatorgenerated Wed Jul 07 13:29:19 SGT 2010
     */
    public void setLimitClause(String limitClause) {
        this.limitClause = limitClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tcurrency
     *
     * @ibatorgenerated Wed Jul 07 13:29:19 SGT 2010
     */
    public String getLimitClause() {
        return limitClause;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table tcurrency
     *
     * @ibatorgenerated Wed Jul 07 13:29:19 SGT 2010
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andTcurrencyPkIsNull() {
            addCriterion("tcurrency_pk is null");
            return this;
        }

        public Criteria andTcurrencyPkIsNotNull() {
            addCriterion("tcurrency_pk is not null");
            return this;
        }

        public Criteria andTcurrencyPkEqualTo(Long value) {
            addCriterion("tcurrency_pk =", value, "tcurrencyPk");
            return this;
        }

        public Criteria andTcurrencyPkNotEqualTo(Long value) {
            addCriterion("tcurrency_pk <>", value, "tcurrencyPk");
            return this;
        }

        public Criteria andTcurrencyPkGreaterThan(Long value) {
            addCriterion("tcurrency_pk >", value, "tcurrencyPk");
            return this;
        }

        public Criteria andTcurrencyPkGreaterThanOrEqualTo(Long value) {
            addCriterion("tcurrency_pk >=", value, "tcurrencyPk");
            return this;
        }

        public Criteria andTcurrencyPkLessThan(Long value) {
            addCriterion("tcurrency_pk <", value, "tcurrencyPk");
            return this;
        }

        public Criteria andTcurrencyPkLessThanOrEqualTo(Long value) {
            addCriterion("tcurrency_pk <=", value, "tcurrencyPk");
            return this;
        }

        public Criteria andTcurrencyPkIn(List<Long> values) {
            addCriterion("tcurrency_pk in", values, "tcurrencyPk");
            return this;
        }

        public Criteria andTcurrencyPkNotIn(List<Long> values) {
            addCriterion("tcurrency_pk not in", values, "tcurrencyPk");
            return this;
        }

        public Criteria andTcurrencyPkBetween(Long value1, Long value2) {
            addCriterion("tcurrency_pk between", value1, value2, "tcurrencyPk");
            return this;
        }

        public Criteria andTcurrencyPkNotBetween(Long value1, Long value2) {
            addCriterion("tcurrency_pk not between", value1, value2, "tcurrencyPk");
            return this;
        }

        public Criteria andCurrencycodeIsNull() {
            addCriterion("currencycode is null");
            return this;
        }

        public Criteria andCurrencycodeIsNotNull() {
            addCriterion("currencycode is not null");
            return this;
        }

        public Criteria andCurrencycodeEqualTo(String value) {
            addCriterion("currencycode =", value, "currencycode");
            return this;
        }

        public Criteria andCurrencycodeNotEqualTo(String value) {
            addCriterion("currencycode <>", value, "currencycode");
            return this;
        }

        public Criteria andCurrencycodeGreaterThan(String value) {
            addCriterion("currencycode >", value, "currencycode");
            return this;
        }

        public Criteria andCurrencycodeGreaterThanOrEqualTo(String value) {
            addCriterion("currencycode >=", value, "currencycode");
            return this;
        }

        public Criteria andCurrencycodeLessThan(String value) {
            addCriterion("currencycode <", value, "currencycode");
            return this;
        }

        public Criteria andCurrencycodeLessThanOrEqualTo(String value) {
            addCriterion("currencycode <=", value, "currencycode");
            return this;
        }

        public Criteria andCurrencycodeLike(String value) {
            addCriterion("currencycode like", value, "currencycode");
            return this;
        }

        public Criteria andCurrencycodeNotLike(String value) {
            addCriterion("currencycode not like", value, "currencycode");
            return this;
        }

        public Criteria andCurrencycodeIn(List<String> values) {
            addCriterion("currencycode in", values, "currencycode");
            return this;
        }

        public Criteria andCurrencycodeNotIn(List<String> values) {
            addCriterion("currencycode not in", values, "currencycode");
            return this;
        }

        public Criteria andCurrencycodeBetween(String value1, String value2) {
            addCriterion("currencycode between", value1, value2, "currencycode");
            return this;
        }

        public Criteria andCurrencycodeNotBetween(String value1, String value2) {
            addCriterion("currencycode not between", value1, value2, "currencycode");
            return this;
        }

        public Criteria andCurrencynameIsNull() {
            addCriterion("currencyname is null");
            return this;
        }

        public Criteria andCurrencynameIsNotNull() {
            addCriterion("currencyname is not null");
            return this;
        }

        public Criteria andCurrencynameEqualTo(String value) {
            addCriterion("currencyname =", value, "currencyname");
            return this;
        }

        public Criteria andCurrencynameNotEqualTo(String value) {
            addCriterion("currencyname <>", value, "currencyname");
            return this;
        }

        public Criteria andCurrencynameGreaterThan(String value) {
            addCriterion("currencyname >", value, "currencyname");
            return this;
        }

        public Criteria andCurrencynameGreaterThanOrEqualTo(String value) {
            addCriterion("currencyname >=", value, "currencyname");
            return this;
        }

        public Criteria andCurrencynameLessThan(String value) {
            addCriterion("currencyname <", value, "currencyname");
            return this;
        }

        public Criteria andCurrencynameLessThanOrEqualTo(String value) {
            addCriterion("currencyname <=", value, "currencyname");
            return this;
        }

        public Criteria andCurrencynameLike(String value) {
            addCriterion("currencyname like", value, "currencyname");
            return this;
        }

        public Criteria andCurrencynameNotLike(String value) {
            addCriterion("currencyname not like", value, "currencyname");
            return this;
        }

        public Criteria andCurrencynameIn(List<String> values) {
            addCriterion("currencyname in", values, "currencyname");
            return this;
        }

        public Criteria andCurrencynameNotIn(List<String> values) {
            addCriterion("currencyname not in", values, "currencyname");
            return this;
        }

        public Criteria andCurrencynameBetween(String value1, String value2) {
            addCriterion("currencyname between", value1, value2, "currencyname");
            return this;
        }

        public Criteria andCurrencynameNotBetween(String value1, String value2) {
            addCriterion("currencyname not between", value1, value2, "currencyname");
            return this;
        }
    }
}