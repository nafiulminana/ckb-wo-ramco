package com.ckb.wo.client.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class LocationExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table tlocation
	 * @ibatorgenerated  Mon Jul 26 17:59:51 SGT 2010
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table tlocation
	 * @ibatorgenerated  Mon Jul 26 17:59:51 SGT 2010
	 */
	protected List<Criteria> oredCriteria;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table tlocation
	 * @ibatorgenerated  Mon Jul 26 17:59:51 SGT 2010
	 */
	protected String limitClause;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tlocation
	 * @ibatorgenerated  Mon Jul 26 17:59:51 SGT 2010
	 */
	public LocationExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tlocation
	 * @ibatorgenerated  Mon Jul 26 17:59:51 SGT 2010
	 */
	protected LocationExample(LocationExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
		this.limitClause = example.limitClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tlocation
	 * @ibatorgenerated  Mon Jul 26 17:59:51 SGT 2010
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tlocation
	 * @ibatorgenerated  Mon Jul 26 17:59:51 SGT 2010
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tlocation
	 * @ibatorgenerated  Mon Jul 26 17:59:51 SGT 2010
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tlocation
	 * @ibatorgenerated  Mon Jul 26 17:59:51 SGT 2010
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tlocation
	 * @ibatorgenerated  Mon Jul 26 17:59:51 SGT 2010
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tlocation
	 * @ibatorgenerated  Mon Jul 26 17:59:51 SGT 2010
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tlocation
	 * @ibatorgenerated  Mon Jul 26 17:59:51 SGT 2010
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tlocation
	 * @ibatorgenerated  Mon Jul 26 17:59:51 SGT 2010
	 */
	public void setLimitClause(String limitClause) {
		this.limitClause = limitClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table tlocation
	 * @ibatorgenerated  Mon Jul 26 17:59:51 SGT 2010
	 */
	public String getLimitClause() {
		return limitClause;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table tlocation
	 * @ibatorgenerated  Mon Jul 26 17:59:51 SGT 2010
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;
                protected String andCustomSQL;
                protected String orCustomSQL;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andTlocationPkIsNull() {
			addCriterion("tlocation_pk is null");
			return this;
		}

		public Criteria andTlocationPkIsNotNull() {
			addCriterion("tlocation_pk is not null");
			return this;
		}

		public Criteria andTlocationPkEqualTo(Long value) {
			addCriterion("tlocation_pk =", value, "tlocationPk");
			return this;
		}

		public Criteria andTlocationPkNotEqualTo(Long value) {
			addCriterion("tlocation_pk <>", value, "tlocationPk");
			return this;
		}

		public Criteria andTlocationPkGreaterThan(Long value) {
			addCriterion("tlocation_pk >", value, "tlocationPk");
			return this;
		}

		public Criteria andTlocationPkGreaterThanOrEqualTo(Long value) {
			addCriterion("tlocation_pk >=", value, "tlocationPk");
			return this;
		}

		public Criteria andTlocationPkLessThan(Long value) {
			addCriterion("tlocation_pk <", value, "tlocationPk");
			return this;
		}

		public Criteria andTlocationPkLessThanOrEqualTo(Long value) {
			addCriterion("tlocation_pk <=", value, "tlocationPk");
			return this;
		}

		public Criteria andTlocationPkIn(List<Long> values) {
			addCriterion("tlocation_pk in", values, "tlocationPk");
			return this;
		}

		public Criteria andTlocationPkNotIn(List<Long> values) {
			addCriterion("tlocation_pk not in", values, "tlocationPk");
			return this;
		}

		public Criteria andTlocationPkBetween(Long value1, Long value2) {
			addCriterion("tlocation_pk between", value1, value2, "tlocationPk");
			return this;
		}

		public Criteria andTlocationPkNotBetween(Long value1, Long value2) {
			addCriterion("tlocation_pk not between", value1, value2,
					"tlocationPk");
			return this;
		}

		public Criteria andLocationcodeIsNull() {
			addCriterion("locationcode is null");
			return this;
		}

		public Criteria andLocationcodeIsNotNull() {
			addCriterion("locationcode is not null");
			return this;
		}

		public Criteria andLocationcodeEqualTo(String value) {
			addCriterion("locationcode =", value, "locationcode");
			return this;
		}

		public Criteria andLocationcodeNotEqualTo(String value) {
			addCriterion("locationcode <>", value, "locationcode");
			return this;
		}

		public Criteria andLocationcodeGreaterThan(String value) {
			addCriterion("locationcode >", value, "locationcode");
			return this;
		}

		public Criteria andLocationcodeGreaterThanOrEqualTo(String value) {
			addCriterion("locationcode >=", value, "locationcode");
			return this;
		}

		public Criteria andLocationcodeLessThan(String value) {
			addCriterion("locationcode <", value, "locationcode");
			return this;
		}

		public Criteria andLocationcodeLessThanOrEqualTo(String value) {
			addCriterion("locationcode <=", value, "locationcode");
			return this;
		}

		public Criteria andLocationcodeLike(String value) {
			addCriterion("locationcode like", value, "locationcode");
			return this;
		}

		public Criteria andLocationcodeNotLike(String value) {
			addCriterion("locationcode not like", value, "locationcode");
			return this;
		}

		public Criteria andLocationcodeIn(List<String> values) {
			addCriterion("locationcode in", values, "locationcode");
			return this;
		}

		public Criteria andLocationcodeNotIn(List<String> values) {
			addCriterion("locationcode not in", values, "locationcode");
			return this;
		}

		public Criteria andLocationcodeBetween(String value1, String value2) {
			addCriterion("locationcode between", value1, value2, "locationcode");
			return this;
		}

		public Criteria andLocationcodeNotBetween(String value1, String value2) {
			addCriterion("locationcode not between", value1, value2,
					"locationcode");
			return this;
		}

		public Criteria andLocationnameIsNull() {
			addCriterion("locationname is null");
			return this;
		}

		public Criteria andLocationnameIsNotNull() {
			addCriterion("locationname is not null");
			return this;
		}

		public Criteria andLocationnameEqualTo(String value) {
			addCriterion("locationname =", value, "locationname");
			return this;
		}

		public Criteria andLocationnameNotEqualTo(String value) {
			addCriterion("locationname <>", value, "locationname");
			return this;
		}

		public Criteria andLocationnameGreaterThan(String value) {
			addCriterion("locationname >", value, "locationname");
			return this;
		}

		public Criteria andLocationnameGreaterThanOrEqualTo(String value) {
			addCriterion("locationname >=", value, "locationname");
			return this;
		}

		public Criteria andLocationnameLessThan(String value) {
			addCriterion("locationname <", value, "locationname");
			return this;
		}

		public Criteria andLocationnameLessThanOrEqualTo(String value) {
			addCriterion("locationname <=", value, "locationname");
			return this;
		}

		public Criteria andLocationnameLike(String value) {
			addCriterion("locationname like", value, "locationname");
			return this;
		}

		public Criteria andLocationnameNotLike(String value) {
			addCriterion("locationname not like", value, "locationname");
			return this;
		}

		public Criteria andLocationnameIn(List<String> values) {
			addCriterion("locationname in", values, "locationname");
			return this;
		}

		public Criteria andLocationnameNotIn(List<String> values) {
			addCriterion("locationname not in", values, "locationname");
			return this;
		}

		public Criteria andLocationnameBetween(String value1, String value2) {
			addCriterion("locationname between", value1, value2, "locationname");
			return this;
		}

		public Criteria andLocationnameNotBetween(String value1, String value2) {
			addCriterion("locationname not between", value1, value2,
					"locationname");
			return this;
		}

		public Criteria andDetailaddressIsNull() {
			addCriterion("detailaddress is null");
			return this;
		}

		public Criteria andDetailaddressIsNotNull() {
			addCriterion("detailaddress is not null");
			return this;
		}

		public Criteria andDetailaddressEqualTo(String value) {
			addCriterion("detailaddress =", value, "detailaddress");
			return this;
		}

		public Criteria andDetailaddressNotEqualTo(String value) {
			addCriterion("detailaddress <>", value, "detailaddress");
			return this;
		}

		public Criteria andDetailaddressGreaterThan(String value) {
			addCriterion("detailaddress >", value, "detailaddress");
			return this;
		}

		public Criteria andDetailaddressGreaterThanOrEqualTo(String value) {
			addCriterion("detailaddress >=", value, "detailaddress");
			return this;
		}

		public Criteria andDetailaddressLessThan(String value) {
			addCriterion("detailaddress <", value, "detailaddress");
			return this;
		}

		public Criteria andDetailaddressLessThanOrEqualTo(String value) {
			addCriterion("detailaddress <=", value, "detailaddress");
			return this;
		}

		public Criteria andDetailaddressLike(String value) {
			addCriterion("detailaddress like", value, "detailaddress");
			return this;
		}

		public Criteria andDetailaddressNotLike(String value) {
			addCriterion("detailaddress not like", value, "detailaddress");
			return this;
		}

		public Criteria andDetailaddressIn(List<String> values) {
			addCriterion("detailaddress in", values, "detailaddress");
			return this;
		}

		public Criteria andDetailaddressNotIn(List<String> values) {
			addCriterion("detailaddress not in", values, "detailaddress");
			return this;
		}

		public Criteria andDetailaddressBetween(String value1, String value2) {
			addCriterion("detailaddress between", value1, value2,
					"detailaddress");
			return this;
		}

		public Criteria andDetailaddressNotBetween(String value1, String value2) {
			addCriterion("detailaddress not between", value1, value2,
					"detailaddress");
			return this;
		}

		public Criteria andCitynameIsNull() {
			addCriterion("cityname is null");
			return this;
		}

		public Criteria andCitynameIsNotNull() {
			addCriterion("cityname is not null");
			return this;
		}

		public Criteria andCitynameEqualTo(String value) {
			addCriterion("cityname =", value, "cityname");
			return this;
		}

		public Criteria andCitynameNotEqualTo(String value) {
			addCriterion("cityname <>", value, "cityname");
			return this;
		}

		public Criteria andCitynameGreaterThan(String value) {
			addCriterion("cityname >", value, "cityname");
			return this;
		}

		public Criteria andCitynameGreaterThanOrEqualTo(String value) {
			addCriterion("cityname >=", value, "cityname");
			return this;
		}

		public Criteria andCitynameLessThan(String value) {
			addCriterion("cityname <", value, "cityname");
			return this;
		}

		public Criteria andCitynameLessThanOrEqualTo(String value) {
			addCriterion("cityname <=", value, "cityname");
			return this;
		}

		public Criteria andCitynameLike(String value) {
			addCriterion("cityname like", value, "cityname");
			return this;
		}

		public Criteria andCitynameNotLike(String value) {
			addCriterion("cityname not like", value, "cityname");
			return this;
		}

		public Criteria andCitynameIn(List<String> values) {
			addCriterion("cityname in", values, "cityname");
			return this;
		}

		public Criteria andCitynameNotIn(List<String> values) {
			addCriterion("cityname not in", values, "cityname");
			return this;
		}

		public Criteria andCitynameBetween(String value1, String value2) {
			addCriterion("cityname between", value1, value2, "cityname");
			return this;
		}

		public Criteria andCitynameNotBetween(String value1, String value2) {
			addCriterion("cityname not between", value1, value2, "cityname");
			return this;
		}
                
                public Criteria andEnabled(Boolean value) {
			addCriterion("tlocation.is_enabled =", value, "enabled");
			return this;
		}
                
                public String getAndCustomSQL() {
                    return andCustomSQL;
                }

                public Criteria setAndCustomSQL(String value) {
                    andCustomSQL = value;
                    return this;
                }

                public String getOrCustomSQL() {
                    return orCustomSQL;
                }

                public Criteria setOrCustomSQL(String value) {
                    orCustomSQL = value;
                    return this;
                }
                
	}
}